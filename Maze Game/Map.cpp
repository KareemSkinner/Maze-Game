#include "Map.h"

std::wstring Map::selectMap()
{
	using namespace std;

	int nMapNumber = 0;
	static int nOldMapNumber = 0;
	random_device MapNumberGenerator;
	mt19937 NumberGenerator(MapNumberGenerator());
	uniform_int_distribution <mt19937::result_type> Distribution(1, 5);
	nMapNumber = Distribution(NumberGenerator);

	if (nOldMapNumber == nMapNumber)
	{
		selectMap();
	}

	nOldMapNumber = nMapNumber;
	wstring map;

	switch (nMapNumber)
	{
	case 1:
	{
		map += L"################";
		map += L"#..............#";
		map += L"#####.##########";
		map += L"#####.##.####..G";
		map += L"#####.##.####..#";
		map += L"#.....##.......#";
		map += L"#..#####....#..#";
		map += L"#..#######..####";
		map += L"#..###.........#";
		map += L"#..###..########";
		map += L"#..###.........#";
		map += L"#..##########..#";
		map += L"#......####...##";
		map += L"#####..##...####";
		map += L"######....######";
		map += L"################";

		break;
	}
	case 2:
	{
		map += L"################";
		map += L"#............#.#";
		map += L"G..#######...#.#";
		map += L"#####..####..#.#";
		map += L"#####........#.#";
		map += L"#......#######.#";
		map += L"#####..#.......#";
		map += L"####..##.#######";
		map += L"###..###..######";
		map += L"###...##.......#";
		map += L"###.####..######";
		map += L"##..##.........#";
		map += L"##..#########..#";
		map += L"##..##.##..##..#";
		map += L"#..............#";
		map += L"################";

		break;
	}
	case 3:
	{
		map += L"################";
		map += L"###########....#";
		map += L"###########.####";
		map += L"###########.####";
		map += L"#.....#..#..####";
		map += L"####..#.#.....##";
		map += L"#.....G#....####";
		map += L"####..#.#......#";
		map += L"#.....#..#..####";
		map += L"####..#####..###";
		map += L"####..######.###";
		map += L"#.......###..###";
		map += L"######....#..###";
		map += L"###..##.#......#";
		map += L"####.##.##.....#";
		map += L"################";

		break;
	}
	case 4:
	{
		map += L"################";
		map += L"#####..........#";
		map += L"#####..##......#";
		map += L"#......###.....#";
		map += L"#.#########....#";
		map += L"#......###.....#";
		map += L"#####..##......#";
		map += L"#........####..#";
		map += L"#......##......#";
		map += L"#####..#########";
		map += L"#####..####....#";
		map += L"#...#..##.###..#";
		map += L"#......#..#G...#";
		map += L"#...####..###..#";
		map += L"#..............#";
		map += L"################";

		break;
	}
	case 5:
	{
		map += L"################";
		map += L"#G.###########.#";
		map += L"#...#########..#";
		map += L"#....#######...#";
		map += L"#.....#####....#";
		map += L"#......###.....#";
		map += L"#.......#......#";
		map += L"#.......#......#";
		map += L"######..#..#####";
		map += L"###.##..#......#";
		map += L"#...#..###.....#";
		map += L"#..#..#####....#";
		map += L"#....#######...#";
		map += L"###.#.......#..#";
		map += L"#.....####.....#";
		map += L"################";

		break;
	}
	default:
	{
		map += L"################";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#..............#";
		map += L"#######G########";
	}
	}

	return map;
}